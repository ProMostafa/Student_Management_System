# Generated by Django 3.0.6 on 2020-07-07 14:28

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import userprofile.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Courses',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_name', models.CharField(choices=[('IT Fondamental', 'IT Fondamental'), ('CS Fondamental', 'CS Fondamental'), ('Mathematics_1', 'Mathematics_1'), ('Discrete Mathematics', 'Discrete Mathematics'), ('C++ Programming', 'C++ Programming'), ('Java Programming', 'Java Programming'), ('Python Programming', 'Python Programming'), ('C++ Advanced', 'C++ Advanced'), ('Java Advanced', 'Java Advanced'), ('Python Advanced', 'Python Advanced')], default='Mathematics_1', max_length=20)),
                ('credit_hours', models.CharField(choices=[('3 hours', '3 hours'), ('2 hours', '2 hours'), ('1 hours', '1 hours')], default='3 hours', max_length=8)),
            ],
        ),
        migrations.CreateModel(
            name='Instructor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Type', models.CharField(choices=[('Instructor', 'Instructor'), ('Student', 'Student')], default='Instructor', max_length=12)),
                ('department', models.CharField(choices=[('CS', 'CS'), ('IT', 'IT'), ('MM', 'MM'), ('IS', 'IS')], default='CS', max_length=2)),
                ('age', models.IntegerField(default=23, validators=[userprofile.models.age_validate])),
                ('phone', models.CharField(max_length=13)),
                ('instructor_level', models.CharField(choices=[('Fresh', 'Fresh'), ('Junior', 'Junior'), ('Senior', 'Senior'), ('Expert', 'Expert')], default='Fresh', max_length=7)),
                ('user_profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Student_Info',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('Instructor', 'Instructor'), ('Student', 'Student')], default='Student', max_length=12)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('phone', models.CharField(max_length=14)),
                ('University_ID', models.CharField(max_length=3)),
                ('level', models.CharField(choices=[('First_Year', 'First_Year'), ('Second_Year', 'Second Year'), ('Third_Year', 'Third_Year'), ('Fourth_Year', 'Fourth_Year')], default='First_Year', max_length=12)),
                ('gpa', models.FloatField(default=0.0, help_text='Enter Correcr GPA Value', validators=[userprofile.models.gpa_validate])),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Famale', 'Famale')], default='Male', max_length=7)),
                ('user_profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['University_ID', 'level', 'gpa'],
            },
        ),
        migrations.CreateModel(
            name='Instructor_Courses',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_off_student', models.IntegerField(default=100)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='userprofile.Courses')),
                ('instructor_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='userprofile.Instructor')),
            ],
        ),
    ]
